package com.mycompany.myapp;

import ca.weblite.codename1.mapper.DataMapper;
import com.codename1.io.ConnectionRequest;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.io.NetworkManager;
import com.codename1.processing.Result;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.TextField;
import com.codename1.ui.Toolbar;
import com.codename1.ui.util.UIBuilder;
import com.mycompany.myapp.Models.ListeVoyages;
import com.mycompany.myapp.Models.Voyage;
import java.io.IOException;
import java.io.InputStream;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;



/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    private Resources theme1;
    Form f1, f2;
    TextField tnom,tpwd;
    Button ok, back;
    String url;
    StringBuffer str;
    ConnectionRequest con;
    String reponse;
    static Form responsable,admin,clientaa;
    public void init(Object context) {
       
        theme = UIManager.initNamedTheme("/theme","Theme");
        
       
       
       

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        
 
        if(current != null){
            current.show();
            return;
        }
        
    
            
        UIBuilder ui = new UIBuilder();
        
        Container cnt1 = ui.createContainer(theme, "GUI 1");
        
        Container cnt2 = ui.createContainer(theme, "GUI 2");
        
        f1 = (Form) cnt1;
        f2 = (Form) cnt2;
        
        tnom = (TextField) ui.findByName("nom", cnt1);
        tpwd = (TextField) ui.findByName("pwd", cnt1);
        ok = (Button) ui.findByName("OK", cnt1);
        
       // back = (Button) ui.findByName("Back", cnt2);
        
        con = new ConnectionRequest() {
            @Override
            protected void readResponse(InputStream input) throws IOException {
                int ch;
                str = new StringBuffer();
               
                while ((ch = input.read()) != -1) {
                    str.append((char) ch);
                }
                reponse = str.toString().trim();
            }

            @Override
            protected void postResponse() {
                System.out.println(str);
               
                
                if(reponse.equalsIgnoreCase("[{\"roles\":\"a:1:{i:1;s:10:\\\"ROLE_ADMIN\\\";}\"}]"))
                                {
                    admin.animateLayout(60);
                    admin.show();}
                 else if(reponse.equalsIgnoreCase("[{\"roles\":\"a:1:{i:0;s:11:\\\"ROLE_CLIENT\\\";}\"}]"))
                                {
                 
                   new MainUI( theme1 = UIManager.initNamedTheme("/theme1","Theme")).show();}
                else {
                    Dialog.show("Error", "Login ou pwd invalid", "OK", "Cancel");
                    System.out.println(reponse.toString());
 }}};
        
        
        ok.addActionListener(e -> {
            url = "http://localhost/atwmobile/login.php?password="
                     +tpwd.getText() +"{"+tnom.getText()+"}"+ "&username=" + tnom.getText();
            System.out.println(url);
            url=url.replace(' ','+');
           
            
            con.setUrl(url);
            NetworkManager.getInstance().addToQueue(con);
            
        });
        
//        back.addActionListener(e->f1.showBack());
        
        f1.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
